#!/usr/bin/env python3

#Script Name: encryption
#Purpose: Encrypt of data
#Example usage: protect the integrity of data
#Expected output: encrypted data
#variables:

import logging
logging.getLogger(“scapy.runtime”).setLevel(logging.ERROR)
from scapy.all import ICMP, IP, sr1, TCP

target = “198.168.18.73”
# target host
port_range = (22, 23, 80, 443, 3389)
# ports to be scan

#sends SYN to defined ports from random ports
for dst_port in port_range:
    src_port = randshort()
    # random source port
    response = sr1(IP(dst=target)/TCP(sport=src_port,dport=dst_port,flags="S"),timeout=3,verbose=0)
    # Parameters needed to send packets and receive respond
    if response = None:
    # if there is no response
        print ("the port is filtered") 
    elif (response.haslayer(TCP)): 
        if(response.getlayer(TCP).flags == 0x12):
        # if the port is open and accepting requests
        send_rst = sr(IP(dst=target)/TCP(sport=src_port,dport=dst_port,flags="R"),timeout=3)
        #
print “Open”
elif (stealth_scan_resp.getlayer(TCP).flags == 0x14):
print “Closed”
elif(stealth_scan_resp.haslayer(ICMP)):
if(int(stealth_scan_resp.getlayer(ICMP).type)==3 and int(stealth_scan_resp.getlayer(ICMP).code) in [1,2,3,9,10,13]):
print “Filtered”