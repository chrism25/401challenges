#!/usr/bin/env python3

#Script Name: encryption
#Purpose: Encrypt of data
#Example usage: protect the integrity of data
#Expected output: encrypted data
#variables:

import ipaddress
import random
from scapy.all import ICMP, IP, sr1, TCP

target = "198.168.18.73"
# target host
port_range = (22, 23, 80, 443, 3389)
# ports to be scan

def menu():
    print ("what would you like to do?" "\n")
    print ("1) TCP Port Range Scanner")
    print ("2) IMCP Ping Sweep")
    print ("3) Exit" "\n")
    choice = input()
    return choice

def action(choice):    
    if choice == "1":
        port()
         
    elif choice == "2":
        ping()
    
    elif choice == "3":
        exit()
        
    else:
        print ("Please choose among the options")

def port():
    # sends SYN to defined ports from random ports
    for dst_port in port_range:
        src_port = random.randint(1,65534)
        # random source port
        response = sr1(IP(dst=target)/TCP(sport=src_port,dport=dst_port,flags="S"),timeout=3,verbose=0)
        # Parameters needed to send packets and receive respond
        if response is None:
        # if there is no response
            print (f"{target}:{dst_port} is filtered (dropped)") 
        
        elif (response.haslayer(TCP)): 
            if (response.getlayer(TCP).flags == 0x12):
            # if the port is open and accepting requests
                send_rst = sr(IP(dst=target)/TCP(sport=src_port,dport=dst_port,flags="R"),timeout=3,verbose=0,)
                # sends RST to close conection 
                print (f"{target}:{dst_port} is open")
            
            elif (response.getlayer(TCP).flags == 0x14):
            # if the port is closed
                print (f"{target}:{dst_port} is closed")
        
        elif(response.haslayer(ICMP)):
            if (int(response.getlayer(ICMP).type) == 3 and
            int(response.getlayer(ICMP).code) in [1,2,3,9,10,13]):
            # The port is filtering, not accepting TCP requests
                print (f"{target}:{dst_port} is filtered (dropped)")
                
def ping():
    block = input("Please provide network block: ")
    


# Prompt user for network address including CIDR block, for example “10.10.0.0/24”
# Careful not to populate the host bits!

# Create a list of all addresses in the given network
# Ping all addresses on the given network except for network address and broadcast address
# If no response, inform the user that the host is down or unresponsive.
# If ICMP type is 3 and ICMP code is either 1, 2, 3, 9, 10, or 13 then inform the user that the host is actively blocking ICMP traffic.
# Otherwise, inform the user that the host is responding.
# Count how many hosts are online and inform the user.




        
#main function
def main():
    for i in range (5):
    #Let the user use the menu up to 5 times at a time
        choice = menu()
        action(choice)
main()
 
