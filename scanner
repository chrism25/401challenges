#!/usr/bin/env python3

#Script Name: malware_detector
#Purpose: Hash files recursively and analyze them with virustotal
#Example usage: Scan files to see if they are malware
#Expected output: List of files with details, hashes and detection of malware

from pathlib import Path
from dotenv import load_dotenv
import hashlib, datetime, os

print ("\nHi, I'm going to help you hash some files")
route = input("Please provide the full path: ") 
print("\nHere is the content of the directory:")
#opens an empty list
list = []
match_list = []

#List all paths recursively
for f in Path(route).rglob('*'):
    print(f)
    #Select only files
    if os.path.isfile(f):
        #appends files to the list
        list.append(f)

#Hashes file and provides details    
def hasher(i):
    #Places hash method md5 into an object
    hash = hashlib.md5()
    #Opens path for reading in binary form
    with open(i, "rb") as file:
        #Hashes files at 4096 bytes of binary code per operation
        #Lambda always takes 0 arguments, which is what iter requires
        for byte_chunk in iter(lambda: file.read(4096),b""):
            hash.update(byte_chunk)
        
        #Provides size of file     
        print("\n"f"File: {i} with {i.stat().st_size} bytes size")
        #Provides timestamp
        print("Hashed on", datetime.datetime.now().strftime("%m/%d/%y - %H:%M:%S"))
        #Returns the message digest(hash) in hex format
        print(hash.hexdigest())
        
        # Calls on your .env file
        load_dotenv()
        # Returns variable of the enviromental key saved on your .env file
        apikey = os.getenv('API_KEY_VIRUSTOTAL')
        # This concatenates everything into a working shell statement that gets passed into virustotal-search.py
        query = 'python3 virustotal-search.py -k ' + apikey + ' -m ' + hash.hexdigest()
        #calls on query
        rts = os.system(query)
        if rts > 3:
            match_list.append(rts)
            
#Iterates through every file in list
for i in list:
    hasher(i)
    
print(len(match_list))